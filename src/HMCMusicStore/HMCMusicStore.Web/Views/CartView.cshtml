@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using HMCMusicStore.Web.Models.Resources
@model HMCMusicStore.Web.Models.CartModel
@{
    Layout = "_MainLayout";
}

<h1>@Model.Title</h1>
<div class="cart-area-container">
    <div class="cart-item-list-container">
        @if(Model.Items.Count == 0)
        {
            <h2>
                Cart is empty!
            </h2>
        }
        @foreach (var item in Model.Items)
        {
            <div class="cart-item-list-item-container">
                <div class="image-container">
                    <img src="@item.ImageSource">
                </div>
                <div class="name-container">
                    @item.Title
                </div>
                <div class="price-container">
                    @item.Price €
                </div>
                <div class="qty-input-container">
                    <input id=@item.Uid class="qty-input" type="number" min="1" value="@item.CountInCart">
                </div>
                <div class="remove-from-cart-button-container">
                    <button id=@item.Uid class="remove-from-cart-button" type="submit">
                        @InputLabels.RemoveFromCartButton
                    </button>
                </div>
            </div>
            <script>
                $('.qty-input#@item.Uid').change(function() {
                    $.ajax({
                        url: "/Category/UpdateCart",
                        method: 'POST',
                        data: {
                            UidToUpdate: '@item.Uid',
                            CountToUpdate: $('.qty-input#@item.Uid').val()
                        },
                        success: ShowPrice
                    });
                });

                $('.remove-from-cart-button#@item.Uid').click(function(){
                    $.ajax({
                        url: "/Category/RemoveFromCart",
                        method: 'POST',
                        data: {
                            UidToUpdate: '@item.Uid',
                            CountToUpdate: 0
                        },
                        success: function() {
                            ShowPrice();
                            location.reload();
                        }
                    })
                });
            </script>
        }
    </div>
    <div class="purchase-area-container">
        <h2>Total price:</h2>
        <h2 class="price-text"></h2>
        <div class="payment-container">
            @if (Model.Items.Count != 0)
            {
                 @using (Html.BeginForm("Cart", "Category", FormMethod.Post))
                 {
                    @Html.LabelFor(a => a.Payment.Name)
                    @Html.TextBoxFor(a => a.Payment.Name, null, new { placeholder="Enter Your Name" })
                    <br />
                    @Html.ValidationMessageFor(a => a.Payment.Name, "", new { @class = "text-danger"})
                    <br />
                    <br />
                    @Html.LabelFor(a => a.Payment.Email)
                    @Html.TextBoxFor(a => a.Payment.Email, null, new { placeholder="(me@example.com, max 50 characters)" })
                    <br />
                    @Html.ValidationMessageFor(a => a.Payment.Email, "", new { @class = "text-danger"})
                    <br />
                    <br />
                    <button type="submit" value="Purchase">
                        Purchase
                    </button>
                 }
            }
        </div>
    </div>
</div>
<script>
    function ShowPrice() {
        $.ajax({
            url: "/Category/GetTotalPrice",
            method: 'GET',
            success: function(data) {
                $('.price-text').text(data + '€');
            }
        });
    }

    $(document).ready(ShowPrice);
</script>